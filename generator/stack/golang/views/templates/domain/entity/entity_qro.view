// Code generated by Torpedo DO NOT EDIT.

// Package {{.PackageName}} {{.Description}}
package {{.PackageName}}

import (
	"github.com/darksubmarine/torpedo-lib-go"
	"github.com/darksubmarine/torpedo-lib-go/entity"
	"github.com/darksubmarine/torpedo-lib-go/tql"
)

var _qroFieldsMap = map[string]string{
	"id":           "Id_",
	"created":      "Created_",
	"updated":      "Updated_",

{{range .Schema.Fields}}
	"{{ .Name }}": "{{ .Name | ToTitle }}_",
{{end}}
}

type EntityQRO struct {
	Id_           *string {{backQuote}}json:"id,omitempty"{{backQuote}}
	Created_      *int64  {{backQuote}}json:"created,omitempty"{{backQuote}}
	Updated_      *int64  {{backQuote}}json:"updated,omitempty"{{backQuote}}

	{{range .Schema.Fields}}
	{{ .Name | ToTitle }}_	*{{ .FieldType }} {{backQuote}}json:"{{ .Name }},omitempty"{{backQuote}}
	{{end}}

	QRO
}

func (qro *EntityQRO) FieldValue(field string) interface{} {
	return tql.FieldValue(qro, entity.FieldNameToCode(field))
}

func (qro *EntityQRO) HydrateFromEntity(ety *{{.EntityName}}, fields ...string) error {

	if ety == nil {
		return torpedo_lib.ErrNilEntity
	}

	entity.To(ety, qro, fields...)

	return nil
}
