// Code generated by Torpedo DO NOT EDIT.

// Package {{.PackageName}} {{.Description}}
package {{.PackageName}}

import  (
	"github.com/darksubmarine/torpedo-lib-go/context"
	"github.com/darksubmarine/torpedo-lib-go/tql"
)

// IEntityDMO interface to defines the Data Mapper Object implementation
type IEntityDMO interface {
	ToEntity() (*{{.EntityName}}, error)
	HydrateFromEntity(entity *{{.EntityName}}) error
	Id() string
	Created() int64
	Updated() int64 {{range .Schema.Fields}}
{{if .Encrypted}}{{ .Name | ToTitle }}() ({{ .FieldType }}, error) {{else}} {{ .Name | ToTitle }}() {{ .FieldType }}{{end}}{{end}}
}

// IEntityDTO interface to defines the Data Transfer Object implementation
type IEntityDTO interface {
	Id() string
	Created() int64
	Updated() int64

{{range .Schema.Fields}}
{{ .Name | ToTitle }}() {{ .FieldType }} {{end}}
}


// IRepositoryBase interface to defines the base repository implementation
type IRepositoryBase interface {
	Save(entity *{{.EntityName}}) error
	FetchByID(id string) (*{{.EntityName}}, error)
	Update(entity *{{.EntityName}}) error
	DeleteByID(id string) error

	Query(q *tql.Query, metadata map[string]string) ([]*{{.EntityName}}, error)

{{if .HasRelationshipsBelongsTo}}
{{range .FetchRelationshipsBelongsTo}}
	DeleteBy{{ .Ref.Name | ToTitle }}({{ .Ref.Name }}Id string) error{{end}}
{{end}}
}

// IServiceBase interface to defines the service basis implementation
type IServiceBase interface {
{{if .HasRelationshipsBelongsTo}}
	IServiceBaseRel{{end}}
	Create(ctx context.IDataMap, entity *{{.EntityName}}) (*{{.EntityName}}, error)
	Read(ctx context.IDataMap, id string) (*{{.EntityName}}, error)
	Update(ctx context.IDataMap, entity *{{.EntityName}}) (*{{.EntityName}}, error)
	Delete(ctx context.IDataMap, id string) error
	Query(q *tql.Query) (*tql.Result, error)
}

{{if .HasRelationshipsBelongsTo}}
// IServiceBaseRel interface to defines the relationship methods
type IServiceBaseRel interface {
{{range .FetchRelationshipsBelongsTo}}
	BelongsTo{{ .Ref.Name | ToTitle }}({{ .Ref.Name }}Id string, items int64, page int64) ([]*{{ $.EntityName }}, error)
	DeleteBy{{ .Ref.Name | ToTitle }}({{ .Ref.Name }}Id string) error{{end}}
}

{{end}}
